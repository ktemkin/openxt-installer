#!/bin/ash
#
# Copyright (C) 2015 Assured Information Security, Inc.
# Author: Kyle J. Temkin <temkink@ainfosec.com>
# 
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
#

#
# Adjusts the installed boot configuration to select devices which
# should be passed to the pciback driver by default.
#
# arguments: module_name, bdf_to_hide
# 
set_device_owner_to_pciback() {
  
    #Determine if the xen_pciback module is installed on the target.
    #We'll use this to decide whether we should use the icky static configuration
    #or the slightly prettier dynamic one.
    find "${DOM0_MOUNT}/lib/modules" -name xen_pciback.ko | grep "xen_pciback\.ko" > /dev/null

    if [ $? -eq 0 ]; then
      set_device_owner_to_pciback_module $@
    else
      set_device_owner_to_pciback_static $@
    fi

}


set_device_owner_to_pciback_module() 
{
  local DEVICE_MODULE="$1"
  local DEVICE_BDF="$2"

  local CONFIG_FILE="${DOM0_MOUNT}/modprobe.d/pciback.conf"

  #Ensure the configuration file exits prior to our searching it it.
  if ! [ -a ${CONFIG_FILE} ] ; then
    echo "#Automatically generated by the installer." > ${CONFIG_FILE}
  fi

  #Hook the target device's installation, so we can ensure that pciback is loaded first.
  #This ensures that the target device is bound to pciback, and not to its original driver.
  grep "install ${DEVICE_MODULE}" "${CONFIG_FILE}" > /dev/null  \
    || echo "install ${DEVICE_MODULE} /sbin/modprobe xen-pciback ; /sbin/modprobe --first-time --ignore-install ${DEVICE_MODULE}" >> ${CONFIG_FILE}

  #If the file does not already contain pci-back hide options, add a line for them.
  grep "options xen-pciback hide=" "${CONFIG_FILE}" > /dev/null || echo "options xen-pciback hide=" >> ${CONFIG_FILE}

  #Add our device BDF to the start of the pciback hide array.
  sed -i "/options xen-pciback/ s/hide=/hide=(${DEVICE_BDF})/" "${CONFIG_FILE}" > /dev/null

}

set_device_owner_to_pciback_static() 
{
  local DEVICE_BDF="$2"
  local GRUB_CONFIG="${DOM0_MOUNT}/boot/system/grub/grub.cfg"

  #If the pciback hide option isn't already present in the target's grub.cfg, add it.
  grep "pciback.hide" ${GRUB_CONFIG} > /dev/null || sed -i "/LINUX_COMMON_CMD/ s/\"$/ pciback.hide=\"/" ${GRUB_CONFIG} > /dev/null

  #... and add the relevant device to the linux command line.
  sed -i "/LINUX_COMMON_CMD/ s/pciback.hide=/pciback.hide=(${DEVICE_BDF})/" ${GRUB_CONFIG} > /dev/null
}
